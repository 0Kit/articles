from aiogram import types
from aiogram.dispatcher import filters, FSMContext

from app.loader import dp
from app.config import SUPERUSER_IDS

IMAGE_REGEXP = r'https://.+?\.(jpg|png|jpeg)'
COMMAND_IMAGE_REGEXP = r"/image:" + IMAGE_REGEXP

FORBIDDEN_PHRASE = [
    '–ö—É—Ä—Å',
    '–§–∏–≥–Ω—è'
]


@dp.message_handler(chat_type=types.ChatType.PRIVATE, commands='is_pm')
@dp.message_handler(chat_type='private', commands='is_pm')
@dp.message_handler(filters.ChatTypeFilter(types.ChatType.PRIVATE), commands='is_pm')
async def chat_type_example(msg: types.Message):
    await msg.answer('–î–∞, —ç—Ç–æ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è')


@dp.message_handler(is_forwarded=True)
@dp.message_handler(filters.ForwardedMessageFilter(True))
async def forwarded_example(msg: types.Message):
    await msg.answer('–ù–µ –ø—ã—Ç–∞–π—Å—è –º–µ–Ω—è –æ–±–º–∞–Ω—É—Ç—å, —è –∂–µ –≤–∏–∂—É, —á—Ç–æ —ç—Ç–æ –Ω–µ —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ')


@dp.message_handler(content_types='contact', is_sender_contact=True)
@dp.message_handler(filters.IsSenderContact(True), content_types='contact')
async def sender_contact_example(msg: types.Message):
    await msg.answer('–î–∞, –≤—Ä–æ–¥–µ –Ω–∞ —Ç–µ–±—è –ø–æ—Ö–æ–∂, –ª–∞–¥–Ω–æ')


@dp.message_handler(is_reply=True, commands='user_id')
@dp.message_handler(filters.IsReplyFilter(True), commands='user_id')
async def reply_filter_example(msg: types.Message):
    await msg.answer(msg.reply_to_message.from_user.id)


@dp.message_handler(commands='change_photo', is_chat_admin=True)
@dp.message_handler(filters.Command('change_photo'), filters.AdminFilter())
async def chat_admin_example(msg: types.Message):
    await msg.answer('–ù–µ, –º–Ω–µ –∏ —ç—Ç–∞ –Ω—Ä–∞–≤–∏—Ç—Å—è')


@dp.message_handler(filters.Text(contains=FORBIDDEN_PHRASE, ignore_case=True))
async def text_example(msg: types.Message):
    await msg.reply('–°–∞–º —Ñ–∏–≥–Ω—è!')


@dp.message_handler(commands='set_state')
async def set_state(msg: types.Message, state: FSMContext):
    """–ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∞"""
    await state.set_state('example_state')
    await msg.answer('–°–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')


@dp.message_handler(state='example_state')
async def state_example(msg: types.Message, state: FSMContext):
    await msg.answer('–û–π –≤—Å—ë, –∏–¥–∏ –æ—Ç—Å—é–¥–∞')
    await state.finish()


@dp.message_handler(filters.RegexpCommandsFilter([COMMAND_IMAGE_REGEXP]))
@dp.message_handler(regexp_commands=[COMMAND_IMAGE_REGEXP])
async def command_regexp_example(msg: types.Message):
    await msg.answer('–ü–æ –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –¥–æ–∫–ª–∞–¥—ã–≤–∞—é, —á—Ç–æ –¥–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º!')


@dp.message_handler(filters.Regexp(IMAGE_REGEXP))
@dp.message_handler(regexp=IMAGE_REGEXP)
async def regexp_example(msg: types.Message):
    await msg.answer('–ü–æ—Ö–æ–∂–µ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É, –Ω–µ —Ç–∞–∫ –ª–∏?')


@dp.message_handler(hashtags='money')
@dp.message_handler(cashtags=['eur', 'usd'])
async def hashtag_example(msg: types.Message):
    await msg.answer('–ï–µ–µ–µ, –¥–µ–Ω—å–≥–∏ üòé')


@dp.message_handler(content_types='photo')
@dp.message_handler(content_types=types.ContentTypes.PHOTO)
async def content_type_example(msg: types.Message):
    await msg.answer('–ö—Ä–∞—Å–∏–≤–µ–Ω—å–∫–æ üòç')


@dp.message_handler(commands='myCommand', commands_ignore_caption=False)
@dp.message_handler(filters.Command('myCommand', ignore_caption=False))
async def command_example(msg: types.Message):
    await msg.answer('–¢–≤–æ—è –∫–æ–º–∞–Ω–¥–∞, —Ç–≤–æ—è, –Ω–µ –∫—Ä–∏—á–∏')


@dp.message_handler(filters.CommandStart(deep_link='deep_link'))
async def deep_link(msg: types.Message):
    await msg.answer('–î–∞, –∑–Ω–∞–µ–º –º—ã —Ç–∞–∫–æ–µ')


@dp.message_handler(filters.CommandStart())
async def command_start_handler(msg: types.Message):
    await msg.answer(f'–ù—É –ø—Ä–∏–≤–µ—Ç, —Ö–æ—Ç–µ–ª —á–µ–≥–æ?')


@dp.message_handler(filters.IDFilter(chat_id=SUPERUSER_IDS))
@dp.message_handler(chat_id=SUPERUSER_IDS)
async def id_filter_example(msg: types.Message):
    await msg.answer('–î–∞, –ø–æ–º–Ω—é —Ç–µ–±—è, –Ω–∞—à —á–µ–ª–æ–≤–µ–∫')
